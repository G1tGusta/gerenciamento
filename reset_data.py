# reset_data.py
#python reset_data.py - apagar tudo e deixar zerado


from database import conectar
import sqlite3
import os

def resetar_tudo():
    """
    EXCLUI TODOS os produtos e TODAS as movimenta√ß√µes do banco de dados.
    Esta opera√ß√£o √© IRREVERS√çVEL.
    """
    # Verifica se o arquivo do banco de dados existe antes de conectar
    if not os.path.exists("estoque.db"):
        print("üö® ATEN√á√ÉO: O arquivo 'estoque.db' n√£o foi encontrado. Execute o 'main.py' primeiro.")
        return

    print("==============================================")
    print("üö® INICIANDO OPERA√á√ÉO DE EXCLUS√ÉO TOTAL DE DADOS üö®")
    print("Isso apagar√° TODOS os produtos e TODOS os registros de movimenta√ß√£o.")
    print("==============================================")

    conn = conectar()
    cursor = conn.cursor()
    
    try:
        # 1. EXCLUI TODAS as movimenta√ß√µes
        cursor.execute("DELETE FROM movimentacoes")
        movimentacoes_deletadas = cursor.rowcount
        print(f"[1/3] [{movimentacoes_deletadas}] Movimenta√ß√µes deletadas do hist√≥rico.")

        # 2. EXCLUI TODOS os produtos
        # NOTA: O SQLite apaga os produtos mesmo que haja chaves estrangeiras, 
        # desde que 'FOREIGN KEYS = ON' esteja ativo (o que est√° no seu database.py) 
        # e as movimenta√ß√µes j√° tenham sido exclu√≠das.
        cursor.execute("DELETE FROM produtos")
        produtos_deletados = cursor.rowcount
        print(f"[2/3] [{produtos_deletados}] Produtos cadastrados deletados.")
        
        # 3. ZERA O CONTADOR DE ID (CR√çTICO para come√ßar a cadastrar do ID 1)
        cursor.execute("UPDATE sqlite_sequence SET seq = 0 WHERE name = 'produtos'")
        cursor.execute("UPDATE sqlite_sequence SET seq = 0 WHERE name = 'movimentacoes'")
        print("[3/3] Contadores de ID zerados para 'produtos' e 'movimentacoes'.")

        # 4. Confirma as altera√ß√µes
        conn.commit()
        
        print("\n‚úÖ SUCESSO: O sistema de estoque est√° completamente limpo.")
        
    except sqlite3.Error as e:
        conn.rollback()
        print(f"\n‚ùå ERRO ao tentar resetar os dados: {e}")
        
    finally:
        conn.close()

if __name__ == '__main__':
    # Pergunta para confirmar, j√° que a a√ß√£o √© CR√çTICA e IRREVERS√çVEL
    confirmacao = input("TEM CERTEZA absoluta que deseja APAGAR TODOS os produtos e movimenta√ß√µes? (s/N): ")
    if confirmacao.lower() == 's':
        resetar_tudo()
    else:
        print("Opera√ß√£o de exclus√£o de dados cancelada pelo usu√°rio.")